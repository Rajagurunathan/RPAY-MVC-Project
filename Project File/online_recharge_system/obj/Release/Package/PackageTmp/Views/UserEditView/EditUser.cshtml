@model online_recharge_system.User

@{
    ViewBag.Title = "My profile";
    Layout = "~/Views/Shared/_UserLayout.cshtml";
}
@*@{
        <script>
            document.getElementById("dob").readOnly = true;
            document.getElementById("email").readOnly = true;
        </script>
    }*@
<section style="background-image: linear-gradient(to left bottom, #586b9f, #528dba, #59aecc, #76ced7, #a1ede0); ">
    <div class="swiper-container-android col-sm-4 col-md-4 col-lg-3" @*style="width: 500px;height: auto"*@>
        <br/><br /><br /><br /><br />
        <div class="card">
            <div class="card-header bg-danger text-white">
                <div class="card-title">
                    <h5 class="text-white justify-content-center">MY PROFILE</h5>
                </div>
            </div>
            @using (Html.BeginForm("EditUser", "UserEditView"))
            {
                @*@Html.AntiForgeryToken()*@
                <center>
                    <img src="~/images/usercardeditprofile.jpg" style="width: 100px" class="card-img-top"/>
                </center>
                <div class="card-body" style="background-color: #537895;
                                                                                                                                                                                                                                                       background-image: linear-gradient(315deg, #537895 0%, #09203f 74%);">
                    @Html.ValidationSummary(true, "", new {@class = "text-danger"})
                    <div class="card-group">
                        @Html.LabelFor(model => model.name, htmlAttributes: new {@class = "sr-only col"})
                        <div class="col">
                            @Html.EditorFor(model => model.name, new {htmlAttributes = new {@class = "form-control"}})
                            @*@Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })*@
                        </div>
                    </div>

                    <div class="card-group">
                        @Html.LabelFor(model => model.phone_number, htmlAttributes: new {@class = "sr-only col"})
                        <div class="col">
                            @Html.EditorFor(model => model.phone_number, new {htmlAttributes = new {@class = "form-control"}})
                            @*@Html.ValidationMessageFor(model => model.phone_number, "", new { @class = "text-danger" })*@
                        </div>
                    </div>



                    <div class="card-group">
                        @Html.LabelFor(model => model.email, htmlAttributes: new {@readonly = "readonly", @class = "sr-only col-md-2"})
                        <div class="col-md-10">
                            @*@Html.EditorFor(model => model.email, new { @readonly = "readonly",htmlAttributes = new { @class = "form-control sr-only", @id = "email" } })*@
                            @*@Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })*@
                        </div>
                    </div>


                    <div class="card-group">
                        @Html.LabelFor(model => model.dob, htmlAttributes: new {@readonly = "readonly", @class = "sr-only col-md-2"})
                        <div class="col-md-10">
                            @*@Html.EditorFor(model => model.dob, new { @readonly = "readonly", htmlAttributes = new { @class = "form-control sr-only", @id = "dob" } })*@
                            @*@Html.ValidationMessageFor(model => model.dob, "", new { @class = "text-danger" })*@
                        </div>
                    </div>

                    <div class="card-group">
                        @Html.LabelFor(model => model.city, htmlAttributes: new {@class = "sr-only col"})
                        <div class="col">
                            @Html.EditorFor(model => model.city, new {htmlAttributes = new {@class = "form-control"}})
                            @*@Html.ValidationMessageFor(model => model.city, "", new { @class = "text-danger" })*@
                        </div>
                    </div>

                    <div class="card-group">
                        @Html.LabelFor(model => model.state, htmlAttributes: new {@class = "sr-only col"})
                        <div class="col">
                            @Html.EditorFor(model => model.state, new {htmlAttributes = new {@class = "form-control"}})
                            @*@Html.ValidationMessageFor(model => model.state, "", new { @class = "text-danger" })*@
                        </div>
                    </div>

                    <div class="card-group">
                        @Html.LabelFor(model => model.pincode, htmlAttributes: new {@class = "sr-only col"})
                        <div class="col">
                            @Html.EditorFor(model => model.pincode, new {htmlAttributes = new {@class = "form-control"}})
                            @*@Html.ValidationMessageFor(model => model.pincode, "", new { @class = "text-danger" })*@
                        </div>
                    </div>

                    <div class="card-group">
                        @Html.LabelFor(model => model.password, htmlAttributes: new {@class = "sr-only col-md-2"})
                        <div class="col-md-10">
                            @*
                            @Html.EditorFor(model => model.password, new {htmlAttributes = new {@class = "form-control sr-only" } })
                                *@
                            @*@Html.ValidationMessageFor(model => model.password, "", new {@class = "text-danger"})*@
                        </div>
                    </div>

                    <div class="card-group">
                        @Html.LabelFor(model => model.balance, htmlAttributes: new {@class = "sr-only col-md-2"})
                        <div class="col-md-10">
                            @*@Html.EditorFor(model => model.balance, new {htmlAttributes = new {@class = "form-control sr-only" } })*@
                            @*@Html.ValidationMessageFor(model => model.balance, "", new {@class = "text-danger"})*@
                        </div>
                    </div>
                </div>
                <div class="card-footer bg-danger card-group">
                    <div class="col">
                        <input type="submit" value="Update Profile" class="btn btn-block bg-warning text-white font-weight-bold"/>
                    </div>
                </div>

            }
        </div>
        <br/><br /><br /><br /><br />
    </div>
</section>
<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
